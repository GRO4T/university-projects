#include <monkey.h>
#include <Keccak-f.h>
#include <gtest/gtest.h>
#include <cstring>

TEST(TestKeccakTools, TestKeccakPStar)
{
    uint8_t state[25] = {
        0x36,0x99,0x3c,0xd1,0x51,0x2f,0x1c,0x48,0xda,0x11,0x5e,0x7e,
        0x74,0xc1,0x04,0x2a,0xc6,0x00,0xdb,0x55,0x0c,0x06,0x90,0x88,0x8b
    };
    uint8_t expected[25] = {
        0x2b,0x2b,0xcb,0xea,0xd3,0x46,0xf2,0x8f,0xe8,0x04,0x50,0x2b,
        0x04,0x7f,0xb3,0xc4,0x00,0xe9,0x01,0x2f,0xcb,0xa8,0x83,0x26,0x31
    };
    KeccakPStar keccakPStar(200, 10);
    keccakPStar(state);
    EXPECT_TRUE(0 == std::memcmp(state,expected,25));
}

TEST(TestKeccakTools, TestMonkeyDuplex)
{
    IterableTransformation<KeccakPStar> f(200);
    MonkeyDuplex md = MonkeyDuplex(f, 10, 10, 1, 10);
    md.start(BitString("1234"));
}

int main(int argc, char** argv)
{

    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
